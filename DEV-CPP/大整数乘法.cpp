#include <stdio.h>
int main()
{
	char a1[200], a2[200];
	int n1[200], n2[200], sum[40000]={0},i,j,t,p,a,b,s,k;
	gets(a1);
	gets(a2);
	for(i=0;a1[i]!='\0';i++)
	{
		n1[i]=a1[i]-'0';
		t=i;
	}
	for(i=0;a2[i]!='\0';i++)
	{
		n2[i]=a2[i]-'0';
		p=i;
	}
	n1[t+1]=n2[p+1]='\0';
	s=t*p;
	for (i=t,k=0;i>=0;i--,k++)
	{
        a=0,b=0;
        for (j=p,p=0;j>=0;j--,p++)
		{
            a=n1[i]*n2[j]+b+sum[k+p];
            sum[k+p]=a%10;
            b=a/10;
        }
        if (b>0)
            sum[k+p]=b;
    }
	while(sum[s--]==0);
	for(i=s+1;i>=0;i--)
		printf("%d",sum[i]);
	return 0;
}


/*【问题描述】求两个不超过200位的非负整数的积。

【输入形式】有两行，每行是一个不超过200位的非负整数，没有多余的前导。

【输出形式】一行，即相乘后的结果。结果不能有多余的前导0，即如果结果是342，那么就不能输出为0342。

【样例输入】
12345678900
98765432100

【样例输出】1219326311126352690000

【样例说明】这两个大整数相乘所得的结果是1219326311126352690000。

【评分标准】本题共4个测试点，每个测试点0.25分，全部通过得1.0分。*/

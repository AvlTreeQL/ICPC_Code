/*
【问题描述】
从标准输入中输入两组整数(每组不超过20个整数，每组整数中元素不重复)，合并两组整数，重复的整数只出现一次，并按从小到大顺序排序输出（即两组整数集的&ldquo;并集&rdquo;）
【输入形式】
首先输入两组整数的个数，以一个空格分隔；然后在下面两行上分别输入两组整数，以一个空格分隔各个整数。
【输出形式】
按从小到大顺序排序输出合并后的整数集（以一个空格分隔各个整数，最后一个整数后的空格可有可无）。
【样例输入】
8   5
5   105   4   32   8   7   9   -60
5   2   87   10   105
【样例输出】
-60   2   4   5   7   8   9   10   32   87   105
【样例说明】
第一组整数有8个，分别为5   105   4   32   8   7   9   -60，第二组整数有5个，分别为5   2   87   10   105。将第一组和第二组整数合并（在两组整数中都出现的整数5和105只出现一次），并按从小到大顺序排序后结果为-60   2   4   5   7   8   9   10   32   87   105。
*/
#include<stdio.h>
#include<stdlib.h>
int cmp(const void*a,const void*b)
{
	return *(int *)a>*(int *)b?1:-1;
}
int main()
{
	int m,n,a[100],i;
	scanf("%d%d",&m,&n);
	for(i=0;i<m+n;i++)
		scanf("%d",&a[i]);
	qsort(a,m+n,sizeof(int),cmp);
	for(i=0;i<m+n;i++)
	{	printf("%d ",a[i]);
		while(i+1<(m+n)&&a[i]==a[i+1]) i++;
	}
	return 1;
}

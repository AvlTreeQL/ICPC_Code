/*
【问题描述】
孪生数定义： 如果 A 的约数（因数，包含1，但不包含A本身)之和等于 B ， B 的约数（因数）之和等于 A ， A 和 B 称为孪生数（A和B不相等）。
试找出正整数 M 和 N 之间的孪生数。
【输入形式】
从控制台输入两个正整数M和N（1<=M<N<=20000），中间用一个空格分隔。
【输出形式】
在标准输出上输出符合题目描述的M和N之间的全部孪生数对（包括M和N）。每行输出一对孪生数，用一个空格隔开，小的先输出；各行孪生数按照第一个数从小到大的顺序输出，一对孪生数只输出一次。 如果没有符合要求的孪生数对，则输出字符串&ldquo;NONE&rdquo;。
【输入样例1】
20 300
【输出样例1】
220 284
【输入样例2】
200 250
【输出样例2】
NONE
【样例说明】
样例1输入的区间为[20,300]，其间有一对孪生数对，即：220（1+2+4+5+10+11+20+22+44+55+110=284）和284（1+2+4+71+142=220）。样例2输入的区间是[200,250]，其间没有孪生数对，所以输出字符串：NONE。
【评分标准】
该题要求输出区间中的所有孪生数对，共有5个测试点，提交程序文件名为example1.c或example1.cpp。
*/
#include<stdio.h>
int fun(int n)
{
	int i,sum=0;
	for(i=1;i<n;i++)
	{
		if(n%i==0) sum+=i;
	}
	return sum;
}
int main()
{
	int m,n,i,flag=0;
	scanf("%d%d",&m,&n);
	for(i=m;i<=n;i++)
	{
		if(fun(fun(i))==i&&i<fun(i))
				flag=1,printf("%d %d\n",i,fun(i));
		
	}
	if(flag==0) printf("NONE");
	return 0;
}

/*
【问题描述】把从1到n(n为奇数)个自然数按方阵排列，
使得方阵的每行、每列以及对角线的数字之和都等于一个方阵常量，这个常量是：0.5*n*(n*n+1)。
【输入形式】用户在第一行输入n值，n必须为奇数。
【输出形式】程序输出魔方阵，每个数字占4个字符宽，采用默认对齐方式。每行输出n个数字之后要回车。&lt;br /&gt;
【样例输入】3
【样例输出】
8 1 6
3 5 7
4 9 2
【样例说明】输入n值为3，程序输出n=3的魔方阵，该魔方阵每行、每列及对角线数字之和均为15。
每行每个数字输出占4个字符宽，并且每行后有一个回车换行。#表示空格(只是表示而已,不是要输出#)&lt;br /&gt;
【评分标准】结果完全正确得20分，每个测试点4分。提交程序名为：mofang.c
*/
#include<stdio.h>
void main()
{
    int a[15][15]={0},i,j,k;     /*先令所有元素都为0*/
      j=(N-1)/2; 
      i=0;
  for(k=1;k<=N*N;)    /*开始处理*/
    {
      if((i<0)&&(j==N))   /*前一个数是第一行第N列时,把下一个数放在上一个数的下面*/
      {
        i=i+2;
        j=j-1;
      }
      else  if(i<0)   /*当行数减到第一行，返回到最后一行*/
       i=N-1;
      else  if(j>N-1)   /*当列数加到最后一行，返回到第一行*/
        j=0;
      else  if(!a[i][j]){     /*如果该元素为0,继续执行程序*/
        a[i][j]=k++;         
        i=i-1;
        j=j+1;
      }
      else     /*如果该元素不为0,就说明要填的数的位置已经被占,则该数放在上一个数的下面*/
      {
        i=i+2;
        j=j-1;
      }
    }
    for(i=0;i输出数组*/
    {
      for(j=0;j       printf("%5d",a[i][j]);
      printf("\n\n");
    }
  }
/*

标题：出栈次序

    X星球特别讲究秩序，所有道路都是单行线。一个甲壳虫车队，共16辆车，按照编号先后发车，
夹在其它车流中，缓缓前行。

    路边有个死胡同，只能容一辆车通过，是临时的检查站，如图【p1.png】所示。

    X星球太死板，要求每辆路过的车必须进入检查站，也可能不检查就放行，也可能仔细检查。

    如果车辆进入检查站和离开的次序可以任意交错。那么，该车队再次上路后，可能的次序有多少种？

    为了方便起见，假设检查站可容纳任意数量的汽车。

    显然，如果车队只有1辆车，可能次序1种；2辆车可能次序2种；3辆车可能次序5种。

    现在足足有16辆车啊，亲！需要你计算出可能次序的数目。

    这是一个整数，请通过浏览器提交答案，不要填写任何多余的内容（比如说明性文字）。 
	
	answer:35357670
	
#include<stdio.h>
int main()
{
    int n,h[20];
    h[1]=1;
    for(n=2;n<=16;n++)
    {
        h[n]=h[n-1]*(4*n-2)/(n+1);//数组存储 
    }
    printf("%d\n",h[n-1]);
    return 0;
}  
*/


#include <iostream>  
#include <string.h>  
using namespace std;  
int main()  
{  
    int f[20];  
    memset(f,0,sizeof(f));  
    f[0]=1;  
    f[1]=1;  
    f[2]=2;  
    f[3]=5;  
    for(int i=4; i<=16; i++)  
    {  
        for(int j=0; j<=i-1; j++)  
            f[i]+=f[j]*f[i-1-j];  
    }  
    cout<<f[16]<<endl;  
    return 0;  
}  
